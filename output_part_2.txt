gs(model_name=settings.EMBEDDINGS_MODEL) self.vector_store = None @handle_errors def initialize(self, documents: list[str]): self.vector_store = FAISS.from_texts(documents, self.embeddings) @handle_errors def update(self, documents: list[str]): if self.vector_store: self.vector_store.add_texts(documents) else: self.initialize(documents) 9. main.py python from config.settings import settings from utils.logging import configure_logging from agents.factory import AgentFactory from database.crud import DBOperations from embeddings.manager import EmbeddingManager def main(): # Инициализация компонентов configure_logging() db = DBOperations() embedding_manager = EmbeddingManager() # Создание агентов factory = AgentFactory() analyzer = factory.create_agent( role="анализатор документов", task="Извлеките ключевые данные из текста" ) generator = factory.create_agent( role="генератор документов", task="Создайте структурированный документ" ) checker = factory.create_agent( role="проверяющий документов", task="Проверьте соответствие нормативным требованиям" ) # Пример рабочего процесса input_text = "Текст нормативного документа для анализа." try: extracted_data = analyzer(input_text) generated_doc = generator(extracted_data) check_result = checker(generated_doc) doc_id = db.add_document( title="Сгенерированный документ", content=generated_doc, status="checked" if check_result else "pending" ) embedding_manager.update([generated_doc]) # Пример получения документов pending_docs = db.get_documents(status="pending") for doc in pending_docs: print(f"[{doc.id}] {doc.title} - {doc.status}") except Exception as e: print(f"Critical error: {str(e)}") if __name__ == "__main__": main() 10. requirements.txt python-dotenv==0.19.0 google-generativeai>=0.3.0 langchain==0.0.346 sqlalchemy==2.0.15 faiss-cpu==1.7.4 pytest==7.2.0 pydantic==1.10.7 11. .env.example GEMINI_API_KEY=your_api_key_here Для запуска: Создайте файл .env с API-ключом Установите зависимости: pip install -r requirements.txt Запустите: python main.py Тесты можно запустить командой: pytest tests/ ) Проанализируй данный проект, если у тебя есть замечани, то дай предложения поих устранению и улучшению проекта.